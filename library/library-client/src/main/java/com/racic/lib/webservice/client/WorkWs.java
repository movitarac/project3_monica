
package com.racic.lib.webservice.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "workWs", targetNamespace = "http://endpoint.webservice.lib.racic.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WorkWs {


    /**
     * 
     * @param arg0
     * @return
     *     returns Work
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findWorksById", targetNamespace = "http://endpoint.webservice.lib.racic.com/", className = "FindWorksById")
    @ResponseWrapper(localName = "findWorksByIdResponse", targetNamespace = "http://endpoint.webservice.lib.racic.com/", className = "FindWorksByIdResponse")
    @Action(input = "http://endpoint.webservice.lib.racic.com/workWs/findWorksByIdRequest", output = "http://endpoint.webservice.lib.racic.com/workWs/findWorksByIdResponse")
    public Work findWorksById(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findWorksByAuthorContain", targetNamespace = "http://endpoint.webservice.lib.racic.com/", className = "FindWorksByAuthorContain")
    @ResponseWrapper(localName = "findWorksByAuthorContainResponse", targetNamespace = "http://endpoint.webservice.lib.racic.com/", className = "FindWorksByAuthorContainResponse")
    @Action(input = "http://endpoint.webservice.lib.racic.com/workWs/findWorksByAuthorContainRequest", output = "http://endpoint.webservice.lib.racic.com/workWs/findWorksByAuthorContainResponse")
    public List<Work> findWorksByAuthorContain(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isValidWorkByAuthor", targetNamespace = "http://endpoint.webservice.lib.racic.com/", className = "IsValidWorkByAuthor")
    @ResponseWrapper(localName = "isValidWorkByAuthorResponse", targetNamespace = "http://endpoint.webservice.lib.racic.com/", className = "IsValidWorkByAuthorResponse")
    @Action(input = "http://endpoint.webservice.lib.racic.com/workWs/isValidWorkByAuthorRequest", output = "http://endpoint.webservice.lib.racic.com/workWs/isValidWorkByAuthorResponse")
    public boolean isValidWorkByAuthor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
